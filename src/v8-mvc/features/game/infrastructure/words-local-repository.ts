import { WordsRepository } from '../domain/words-repository'
import { Word } from '../domain/word'

export class WordsLocalRepository implements WordsRepository {
  data = [
    'lodash',
    'chalk',
    'eslint',
    'react',
    'dotenv',
    'moment',
    'async',
    'debug',
    'semver',
    'mkdirp',
    'rimraf',
    'yargs',
    'axios',
    'redux',
    'colors',
    'mocha',
    'tslint',
    'jquery',
    'yosay',
    'is-wsl',
    'morgan',
    'ts-pnp',
    'marked',
    'globby',
    'tslib',
    'stylus',
    'execa',
    'enzyme',
    'ramda',
    'prompt',
    'xml2js',
    'figlet',
    'redis',
    'babel',
    'extend',
    'jsdom',
    'sinon',
    'which',
    'karma',
    'mysql',
    'multer',
    'husky',
    'json5',
    'helmet',
    'acorn',
    'bunyan',
    'rollup',
    'precss',
    'clear',
    'config',
    'log4js',
    'npmlog',
    'slash',
    'clone',
    'nconf',
    'yamljs',
    'grunt',
    'xtend',
    'boxen',
    'bcrypt',
    'cookie',
    'assert',
    'events',
    'merge',
    'crypto',
    'color',
    'vinyl',
    'watch',
    'listr',
    'bytes',
    'touch',
    'unzip',
    'bower',
    'github',
    'merge2',
    'plist',
    'global',
    'jszip',
    'faker',
    'xmldom',
    'mockjs',
    'string',
    'pkg-up',
    'cliui',
    'osenv',
    'bn.js',
    'sharp',
    'jshint',
    'verror',
    'opener',
    'buffer',
    'parse5',
    'fresh',
    'wrench',
    'tar-fs',
    'is-ci',
    'ignore',
    'should',
    'expect',
    'arrify',
    'errno',
    'split',
    'upath',
    'wrappy',
    'serve',
    'table',
    'urijs',
    'radium',
    'xcode',
    'vorpal',
    'lowdb',
    'recast',
    'mysql2',
    'jsesc',
    'immer',
    'vuejs',
    'angular',
  ]

  async findAll(): Promise<Word[]> {
    return this.data
  }
}
